// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An alert created in alert management service.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Alert : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        public Alert()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        /// <param name="id">Azure resource Id</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="severity">Severity of alert Sev1 being highest and
        /// Sev3 being lowest. Possible values include: 'Sev0', 'Sev1', 'Sev2',
        /// 'Sev3', 'Sev4'</param>
        /// <param name="signalType">Log based alert or metric based alert.
        /// Possible values include: 'Metric', 'Log', 'Unknown'</param>
        /// <param name="alertState">Alert object state. Possible values
        /// include: 'New', 'Acknowledged', 'Closed'</param>
        /// <param name="monitorCondition">Condition of the rule at the monitor
        /// service. Possible values include: 'Fired', 'Resolved'</param>
        /// <param name="targetResource">Target ARM resource, on which alert
        /// got created.</param>
        /// <param name="targetResourceName">Target ARM resource name, on which
        /// alert got created.</param>
        /// <param name="targetResourceGroup">Resource group of target ARM
        /// resource.</param>
        /// <param name="targetResourceType">Resource type of target ARM
        /// resource</param>
        /// <param name="monitorService">Monitor service which is the source of
        /// the alert object. Possible values include: 'Platform', 'Application
        /// Insights', 'Log Analytics', 'Infrastructure Insights', 'ActivityLog
        /// Administrative', 'ActivityLog Security', 'ActivityLog
        /// Recommendation', 'ActivityLog Policy', 'ActivityLog Autoscale',
        /// 'ServiceHealth', 'SmartDetector', 'Zabbix', 'SCOM',
        /// 'Nagios'</param>
        /// <param name="sourceCreatedId">Unique Id created by monitor
        /// service</param>
        /// <param name="smartGroupId">Unique Id of the smart group</param>
        /// <param name="smartGroupingReason">Reason for addition to a smart
        /// group</param>
        /// <param name="startDateTime">Creation time(ISO-8601 format).</param>
        /// <param name="lastModifiedDateTime">Last modification time(ISO-8601
        /// format).</param>
        /// <param name="lastModifiedUserName">User who last modified the
        /// alert.</param>
        /// <param name="payload">More details which are contextual to the
        /// monitor service.</param>
        public Alert(string id = default(string), string type = default(string), string name = default(string), string severity = default(string), string signalType = default(string), string alertState = default(string), string monitorCondition = default(string), string targetResource = default(string), string targetResourceName = default(string), string targetResourceGroup = default(string), string targetResourceType = default(string), string monitorService = default(string), string sourceCreatedId = default(string), string smartGroupId = default(string), string smartGroupingReason = default(string), System.DateTime? startDateTime = default(System.DateTime?), System.DateTime? lastModifiedDateTime = default(System.DateTime?), string lastModifiedUserName = default(string), object payload = default(object))
            : base(id, type, name)
        {
            Severity = severity;
            SignalType = signalType;
            AlertState = alertState;
            MonitorCondition = monitorCondition;
            TargetResource = targetResource;
            TargetResourceName = targetResourceName;
            TargetResourceGroup = targetResourceGroup;
            TargetResourceType = targetResourceType;
            MonitorService = monitorService;
            SourceCreatedId = sourceCreatedId;
            SmartGroupId = smartGroupId;
            SmartGroupingReason = smartGroupingReason;
            StartDateTime = startDateTime;
            LastModifiedDateTime = lastModifiedDateTime;
            LastModifiedUserName = lastModifiedUserName;
            Payload = payload;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets severity of alert Sev1 being highest and Sev3 being lowest.
        /// Possible values include: 'Sev0', 'Sev1', 'Sev2', 'Sev3', 'Sev4'
        /// </summary>
        [JsonProperty(PropertyName = "properties.severity")]
        public string Severity { get; private set; }

        /// <summary>
        /// Gets log based alert or metric based alert. Possible values
        /// include: 'Metric', 'Log', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.signalType")]
        public string SignalType { get; private set; }

        /// <summary>
        /// Gets alert object state. Possible values include: 'New',
        /// 'Acknowledged', 'Closed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.alertState")]
        public string AlertState { get; private set; }

        /// <summary>
        /// Gets condition of the rule at the monitor service. Possible values
        /// include: 'Fired', 'Resolved'
        /// </summary>
        [JsonProperty(PropertyName = "properties.monitorCondition")]
        public string MonitorCondition { get; private set; }

        /// <summary>
        /// Gets or sets target ARM resource, on which alert got created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResource")]
        public string TargetResource { get; set; }

        /// <summary>
        /// Gets or sets target ARM resource name, on which alert got created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResourceName")]
        public string TargetResourceName { get; set; }

        /// <summary>
        /// Gets or sets resource group of target ARM resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResourceGroup")]
        public string TargetResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets resource type of target ARM resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResourceType")]
        public string TargetResourceType { get; set; }

        /// <summary>
        /// Gets monitor service which is the source of the alert object.
        /// Possible values include: 'Platform', 'Application Insights', 'Log
        /// Analytics', 'Infrastructure Insights', 'ActivityLog
        /// Administrative', 'ActivityLog Security', 'ActivityLog
        /// Recommendation', 'ActivityLog Policy', 'ActivityLog Autoscale',
        /// 'ServiceHealth', 'SmartDetector', 'Zabbix', 'SCOM', 'Nagios'
        /// </summary>
        [JsonProperty(PropertyName = "properties.monitorService")]
        public string MonitorService { get; private set; }

        /// <summary>
        /// Gets unique Id created by monitor service
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceCreatedId")]
        public string SourceCreatedId { get; private set; }

        /// <summary>
        /// Gets unique Id of the smart group
        /// </summary>
        [JsonProperty(PropertyName = "properties.smartGroupId")]
        public string SmartGroupId { get; private set; }

        /// <summary>
        /// Gets reason for addition to a smart group
        /// </summary>
        [JsonProperty(PropertyName = "properties.smartGroupingReason")]
        public string SmartGroupingReason { get; private set; }

        /// <summary>
        /// Gets creation time(ISO-8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "properties.startDateTime")]
        public System.DateTime? StartDateTime { get; private set; }

        /// <summary>
        /// Gets last modification time(ISO-8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedDateTime")]
        public System.DateTime? LastModifiedDateTime { get; private set; }

        /// <summary>
        /// Gets user who last modified the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedUserName")]
        public string LastModifiedUserName { get; private set; }

        /// <summary>
        /// Gets more details which are contextual to the monitor service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.payload")]
        public object Payload { get; private set; }

    }
}
