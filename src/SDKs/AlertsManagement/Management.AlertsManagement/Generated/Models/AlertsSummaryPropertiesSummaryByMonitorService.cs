// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AlertsManagement.Models
{
    using System.Linq;

    /// <summary>
    /// Summary of alerts by severity
    /// </summary>
    public partial class AlertsSummaryPropertiesSummaryByMonitorService : AlertsSummaryByMonitorService
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AlertsSummaryPropertiesSummaryByMonitorService class.
        /// </summary>
        public AlertsSummaryPropertiesSummaryByMonitorService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AlertsSummaryPropertiesSummaryByMonitorService class.
        /// </summary>
        /// <param name="platform">Count of alerts of "Platform"</param>
        /// <param name="applicationInsights">Count of alerts of "Application
        /// Insights"</param>
        /// <param name="logAnalytics">Count of alerts of "Log
        /// Analytics"</param>
        /// <param name="zabbix">Count of alerts of "Zabbix"</param>
        /// <param name="scom">Count of alerts of "SCOM"</param>
        /// <param name="nagios">Count of alerts of "Nagios"</param>
        /// <param name="infrastructureInsights">Count of alerts of
        /// "Infrastructure Insights"</param>
        /// <param name="activityLogAdministrative">Count of alerts of
        /// "ActivityLog Administrative"</param>
        /// <param name="activityLogSecurity">Count of alerts of "ActivityLog
        /// Security"</param>
        /// <param name="activityLogRecommendation">Count of alerts of
        /// "ActivityLog Recommendation"</param>
        /// <param name="activityLogPolicy">Count of alerts of "ActivityLog
        /// Policy"</param>
        /// <param name="activityLogAutoscale">Count of alerts of "ActivityLog
        /// Autoscale"</param>
        /// <param name="serviceHealth">Count of alerts of
        /// "ServiceHealth"</param>
        /// <param name="smartDetector">Count of alerts of "Smart
        /// Detector"</param>
        public AlertsSummaryPropertiesSummaryByMonitorService(int? platform = default(int?), int? applicationInsights = default(int?), int? logAnalytics = default(int?), int? zabbix = default(int?), int? scom = default(int?), int? nagios = default(int?), int? infrastructureInsights = default(int?), int? activityLogAdministrative = default(int?), int? activityLogSecurity = default(int?), int? activityLogRecommendation = default(int?), int? activityLogPolicy = default(int?), int? activityLogAutoscale = default(int?), int? serviceHealth = default(int?), int? smartDetector = default(int?))
            : base(platform, applicationInsights, logAnalytics, zabbix, scom, nagios, infrastructureInsights, activityLogAdministrative, activityLogSecurity, activityLogRecommendation, activityLogPolicy, activityLogAutoscale, serviceHealth, smartDetector)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

    }
}
